// <auto-generated />
using System;
using EFC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFC.Migrations
{
    [DbContext(typeof(DatabaseAccess))]
    [Migration("20230518183157_ingredientAdded")]
    partial class ingredientAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("EFC.Entities.IngredientNameEntity", b =>
                {
                    b.Property<string>("Ingredient")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MenuEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ingredient");

                    b.HasIndex("MenuEntityId");

                    b.ToTable("IngredientNameEntity");
                });

            modelBuilder.Entity("EFC.Entities.IngredientToMenuMapperEntity", b =>
                {
                    b.Property<string>("IngredientName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientName", "MenuId");

                    b.ToTable("IngredientToMenuMapperEntity");
                });

            modelBuilder.Entity("EFC.Entities.MenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("MenuEntity");
                });

            modelBuilder.Entity("EFC.Entities.ReservationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReservedByUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ReservedByUsername");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("EFC.Entities.UserEntity", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFC.Entities.IngredientNameEntity", b =>
                {
                    b.HasOne("EFC.Entities.MenuEntity", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("MenuEntityId");
                });

            modelBuilder.Entity("EFC.Entities.ReservationEntity", b =>
                {
                    b.HasOne("EFC.Entities.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFC.Entities.UserEntity", "ReservedBy")
                        .WithMany()
                        .HasForeignKey("ReservedByUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("ReservedBy");
                });

            modelBuilder.Entity("EFC.Entities.MenuEntity", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
